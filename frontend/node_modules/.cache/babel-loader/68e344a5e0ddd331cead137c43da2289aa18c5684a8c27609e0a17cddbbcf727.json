{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gorek\\\\resume_projects\\\\DCU_news_app\\\\frontend\\\\src\\\\components\\\\RedditPostCard.jsx\";\nimport React from \"react\";\nimport { Card, CardContent, Typography, Chip, Box, Link, IconButton } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RedditPostCard({\n  post,\n  onDelete\n}) {\n  var _post$link;\n  const redditEmbedUrl = (_post$link = post.link) !== null && _post$link !== void 0 && _post$link.includes(\"reddit.com\") ? `https://www.redditmedia.com${post.link.replace(\"https://reddit.com\", \"\")}?ref_source=embed&ref=share&embed=true` : null;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 3,\n      borderRadius: 3,\n      boxShadow: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        pr: 1,\n        pt: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => {\n          var _post$_id;\n          const id = ((_post$_id = post._id) === null || _post$_id === void 0 ? void 0 : _post$_id.$oid) || post._id;\n          console.log(\"Deleting post_id:\", id);\n          onDelete(id);\n        },\n        \"aria-label\": \"delete\",\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        color: \"text.secondary\",\n        children: [post.author ? `u/${post.author} • ` : \"\", new Date(post.scraped_at).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), post.tag && /*#__PURE__*/_jsxDEV(Chip, {\n        label: post.tag,\n        size: \"small\",\n        sx: {\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), post.is_reddit_video ? /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://www.redditmedia.com${post.link.replace(\"https://reddit.com\", \"\")}?ref_source=embed&ref=share&embed=true`,\n          style: {\n            border: \"none\",\n            width: \"100%\",\n            height: \"600px\",\n            borderRadius: 8,\n            overflow: \"hidden\"\n          },\n          scrolling: \"yes\",\n          allow: \"autoplay; fullscreen\",\n          allowFullScreen: true,\n          title: \"Reddit video embed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : post.image_url ? /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.image_url,\n          alt: post.title || \"Reddit post image\",\n          style: {\n            width: \"100%\",\n            maxHeight: \"80vh\",\n            objectFit: \"contain\",\n            borderRadius: 8,\n            display: \"block\",\n            margin: \"0 auto\"\n          },\n          referrerPolicy: \"no-referrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = RedditPostCard;\nvar _c;\n$RefreshReg$(_c, \"RedditPostCard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Chip","Box","Link","IconButton","DeleteIcon","jsxDEV","_jsxDEV","RedditPostCard","post","onDelete","_post$link","redditEmbedUrl","link","includes","replace","sx","mb","borderRadius","boxShadow","children","display","justifyContent","pr","pt","onClick","_post$_id","id","_id","$oid","console","log","size","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","author","Date","scraped_at","toLocaleString","gutterBottom","title","tag","label","is_reddit_video","mt","src","style","border","width","height","overflow","scrolling","allow","allowFullScreen","image_url","alt","maxHeight","objectFit","margin","referrerPolicy","_c","$RefreshReg$"],"sources":["C:/Users/gorek/resume_projects/DCU_news_app/frontend/src/components/RedditPostCard.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography, Chip, Box, Link,IconButton } from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nexport default function RedditPostCard({ post, onDelete }) {\r\n  const redditEmbedUrl = post.link?.includes(\"reddit.com\")\r\n    ? `https://www.redditmedia.com${post.link.replace(\"https://reddit.com\", \"\")}?ref_source=embed&ref=share&embed=true`\r\n    : null;\r\n\r\n  return (\r\n    <Card sx={{ mb: 3, borderRadius: 3, boxShadow: 4 }}>\r\n        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", pr: 1, pt: 1 }}>\r\n          <IconButton\r\n            onClick={() => {\r\n              const id = post._id?.$oid || post._id;\r\n              console.log(\"Deleting post_id:\", id);\r\n              onDelete(id);\r\n            }}\r\n            aria-label=\"delete\"\r\n            size=\"small\"\r\n          >\r\n            <DeleteIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Box>\r\n\r\n      <CardContent>\r\n        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n          {post.author ? `u/${post.author} • ` : \"\"}\r\n          {new Date(post.scraped_at).toLocaleString()}\r\n        </Typography>\r\n\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {post.title}\r\n        </Typography>\r\n\r\n        {post.tag && (\r\n          <Chip label={post.tag} size=\"small\" sx={{ mb: 1 }} />\r\n        )}\r\n\r\n        {/* Use Reddit embed for native playback support */}\r\n         {post.is_reddit_video ? (\r\n          <Box mt={2}>\r\n            <iframe\r\n              src={`https://www.redditmedia.com${post.link.replace(\"https://reddit.com\", \"\")}?ref_source=embed&ref=share&embed=true`}\r\n              style={{\r\n                border: \"none\",\r\n                width: \"100%\",\r\n                height: \"600px\",\r\n                borderRadius: 8,\r\n                overflow: \"hidden\",\r\n              }}\r\n              scrolling=\"yes\"\r\n              allow=\"autoplay; fullscreen\"\r\n              allowFullScreen\r\n              title=\"Reddit video embed\"\r\n            />\r\n          </Box>\r\n        ) : post.image_url ? (\r\n          <Box mt={2}>\r\n            <img\r\n              src={post.image_url}\r\n              alt={post.title || \"Reddit post image\"}\r\n              style={{\r\n                width: \"100%\",\r\n                maxHeight: \"80vh\",\r\n                objectFit: \"contain\",\r\n                borderRadius: 8,\r\n                display:\"block\",\r\n                margin: \"0 auto\"\r\n              }}\r\n              referrerPolicy=\"no-referrer\"\r\n            />\r\n          </Box>\r\n        ) : null}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}