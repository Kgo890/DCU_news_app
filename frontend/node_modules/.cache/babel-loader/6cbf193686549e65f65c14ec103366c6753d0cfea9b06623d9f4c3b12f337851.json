{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gorek\\\\resume_projects\\\\DCU_news_app\\\\frontend\\\\src\\\\components\\\\RedditPostCard.jsx\";\nimport React from \"react\";\nimport { Card, CardContent, Typography, Chip, Box, Link } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RedditPostCard({\n  post\n}) {\n  var _post$link;\n  // Extract Reddit post ID from the URL for embedding\n  const redditEmbedUrl = (_post$link = post.link) !== null && _post$link !== void 0 && _post$link.includes(\"reddit.com\") ? `https://www.redditmedia.com${post.link.replace(\"https://reddit.com\", \"\")}?ref_source=embed&ref=share&embed=true` : null;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 3,\n      borderRadius: 3,\n      boxShadow: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        color: \"text.secondary\",\n        children: [post.author ? `u/${post.author} • ` : \"\", new Date(post.scraped_at).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), post.tag && /*#__PURE__*/_jsxDEV(Chip, {\n        label: post.tag,\n        size: \"small\",\n        sx: {\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 1,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: post.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          underline: \"hover\",\n          sx: {\n            wordBreak: \"break-word\",\n            color: \"primary.main\"\n          },\n          children: post.link\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = RedditPostCard;\nvar _c;\n$RefreshReg$(_c, \"RedditPostCard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Chip","Box","Link","jsxDEV","_jsxDEV","RedditPostCard","post","_post$link","redditEmbedUrl","link","includes","replace","sx","mb","borderRadius","boxShadow","children","variant","color","author","Date","scraped_at","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","gutterBottom","title","tag","label","size","mt","href","target","rel","underline","wordBreak","_c","$RefreshReg$"],"sources":["C:/Users/gorek/resume_projects/DCU_news_app/frontend/src/components/RedditPostCard.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography, Chip, Box, Link } from \"@mui/material\";\r\n\r\nexport default function RedditPostCard({ post }) {\r\n  // Extract Reddit post ID from the URL for embedding\r\n  const redditEmbedUrl = post.link?.includes(\"reddit.com\")\r\n    ? `https://www.redditmedia.com${post.link.replace(\"https://reddit.com\", \"\")}?ref_source=embed&ref=share&embed=true`\r\n    : null;\r\n\r\n  return (\r\n    <Card sx={{ mb: 3, borderRadius: 3, boxShadow: 4 }}>\r\n      <CardContent>\r\n        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n          {post.author ? `u/${post.author} • ` : \"\"}\r\n          {new Date(post.scraped_at).toLocaleString()}\r\n        </Typography>\r\n\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {post.title}\r\n        </Typography>\r\n\r\n        {post.tag && (\r\n          <Chip label={post.tag} size=\"small\" sx={{ mb: 1 }} />\r\n        )}\r\n\r\n        <Box mt={1}>\r\n          <Link\r\n            href={post.link}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            underline=\"hover\"\r\n            sx={{ wordBreak: \"break-word\", color: \"primary.main\" }}\r\n          >\r\n            {post.link}\r\n          </Link>\r\n        </Box>\r\n\r\n        {/* Use Reddit Embed if it's a video post */}\r\n        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAA,IAAAC,UAAA;EAC/C;EACA,MAAMC,cAAc,GAAG,CAAAD,UAAA,GAAAD,IAAI,CAACG,IAAI,cAAAF,UAAA,eAATA,UAAA,CAAWG,QAAQ,CAAC,YAAY,CAAC,GACpD,8BAA8BJ,IAAI,CAACG,IAAI,CAACE,OAAO,CAAC,oBAAoB,EAAE,EAAE,CAAC,wCAAwC,GACjH,IAAI;EAER,oBACEP,OAAA,CAACP,IAAI;IAACe,EAAE,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,YAAY,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAE,CAAE;IAAAC,QAAA,eACjDZ,OAAA,CAACN,WAAW;MAAAkB,QAAA,gBACVZ,OAAA,CAACL,UAAU;QAACkB,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC,gBAAgB;QAAAF,QAAA,GACnDV,IAAI,CAACa,MAAM,GAAG,KAAKb,IAAI,CAACa,MAAM,KAAK,GAAG,EAAE,EACxC,IAAIC,IAAI,CAACd,IAAI,CAACe,UAAU,CAAC,CAACC,cAAc,CAAC,CAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eAEbtB,OAAA,CAACL,UAAU;QAACkB,OAAO,EAAC,IAAI;QAACU,YAAY;QAAAX,QAAA,EAClCV,IAAI,CAACsB;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EAEZpB,IAAI,CAACuB,GAAG,iBACPzB,OAAA,CAACJ,IAAI;QAAC8B,KAAK,EAAExB,IAAI,CAACuB,GAAI;QAACE,IAAI,EAAC,OAAO;QAACnB,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAE;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACrD,eAEDtB,OAAA,CAACH,GAAG;QAAC+B,EAAE,EAAE,CAAE;QAAAhB,QAAA,eACTZ,OAAA,CAACF,IAAI;UACH+B,IAAI,EAAE3B,IAAI,CAACG,IAAK;UAChByB,MAAM,EAAC,QAAQ;UACfC,GAAG,EAAC,qBAAqB;UACzBC,SAAS,EAAC,OAAO;UACjBxB,EAAE,EAAE;YAAEyB,SAAS,EAAE,YAAY;YAAEnB,KAAK,EAAE;UAAe,CAAE;UAAAF,QAAA,EAEtDV,IAAI,CAACG;QAAI;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX;AAACY,EAAA,GAvCuBjC,cAAc;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}