{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access_token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response && error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n    if (!refresh_token) {\n      console.error(\"No refresh token found.\");\n      return Promise.reject(error);\n    }\n    try {\n      const res = await axios.post(\"http://localhost:8000/auth/refresh\", {\n        refresh_token: refresh_token\n      });\n      const new_access_token = res.data.access_token;\n      localStorage.setItem(\"access_token\", new_access_token);\n      originalRequest.headers.Authorization = `Bearer ${new_access_token}`;\n      return api(originalRequest);\n    } catch (refreshError) {\n      console.error(\"Refresh token failed\", refreshError);\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"refresh_token\");\n      window.location.href = \"/\";\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","originalRequest","status","_retry","refresh_token","console","res","post","new_access_token","data","access_token","setItem","refreshError","removeItem","window","location","href"],"sources":["C:/Users/gorek/resume_projects/DCU_news_app/frontend/src/auth/axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:8000\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"access_token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    if (\r\n      error.response &&\r\n      error.response.status === 401 &&\r\n      !originalRequest._retry\r\n    ) {\r\n      originalRequest._retry = true;\r\n\r\n      const refresh_token = localStorage.getItem(\"refresh_token\");\r\n      if (!refresh_token) {\r\n        console.error(\"No refresh token found.\");\r\n        return Promise.reject(error);\r\n      }\r\n\r\n      try {\r\n        const res = await axios.post(\"http://localhost:8000/auth/refresh\", {\r\n          refresh_token: refresh_token,\r\n        });\r\n\r\n        const new_access_token = res.data.access_token;\r\n        localStorage.setItem(\"access_token\", new_access_token);\r\n\r\n        originalRequest.headers.Authorization = `Bearer ${new_access_token}`;\r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        console.error(\"Refresh token failed\", refreshError);\r\n        localStorage.removeItem(\"access_token\");\r\n        localStorage.removeItem(\"refresh_token\");\r\n        window.location.href = \"/\";\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAGFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAGDZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EACf,MAAMI,eAAe,GAAGJ,KAAK,CAACL,MAAM;EAEpC,IACEK,KAAK,CAACG,QAAQ,IACdH,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAC7B,CAACD,eAAe,CAACE,MAAM,EACvB;IACAF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,MAAMC,aAAa,GAAGV,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC3D,IAAI,CAACS,aAAa,EAAE;MAClBC,OAAO,CAACR,KAAK,CAAC,yBAAyB,CAAC;MACxC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAC9B;IAEA,IAAI;MACF,MAAMS,GAAG,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,oCAAoC,EAAE;QACjEH,aAAa,EAAEA;MACjB,CAAC,CAAC;MAEF,MAAMI,gBAAgB,GAAGF,GAAG,CAACG,IAAI,CAACC,YAAY;MAC9ChB,YAAY,CAACiB,OAAO,CAAC,cAAc,EAAEH,gBAAgB,CAAC;MAEtDP,eAAe,CAACb,OAAO,CAACQ,aAAa,GAAG,UAAUY,gBAAgB,EAAE;MACpE,OAAOvB,GAAG,CAACgB,eAAe,CAAC;IAC7B,CAAC,CAAC,OAAOW,YAAY,EAAE;MACrBP,OAAO,CAACR,KAAK,CAAC,sBAAsB,EAAEe,YAAY,CAAC;MACnDlB,YAAY,CAACmB,UAAU,CAAC,cAAc,CAAC;MACvCnB,YAAY,CAACmB,UAAU,CAAC,eAAe,CAAC;MACxCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;MAC1B,OAAOlB,OAAO,CAACC,MAAM,CAACa,YAAY,CAAC;IACrC;EACF;EAEA,OAAOd,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}