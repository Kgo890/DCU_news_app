{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gorek\\\\resume_projects\\\\DCU_news_app\\\\frontend\\\\src\\\\pages\\\\TimelinePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../auth/axios\";\nimport SearchAppBar from \"../componets/AppBar\";\nimport { Container, Typography, Card, CardContent, Grid, Divider, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TimelinePage() {\n  _s();\n  const [timeline, setTimeline] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    fetchTimeline();\n  }, []);\n  async function fetchTimeline() {\n    try {\n      const response = await api.get(\"/reddit/timeline\");\n\n      // Ensure a safe structure\n      const data = Array.isArray(response.data.message) ? response.data.message.map(item => ({\n        ...item,\n        posts: Array.isArray(item.posts) ? item.posts : []\n      })) : [];\n      setTimeline(data);\n    } catch (error) {\n      console.error(\"Failed to fetch timeline:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchAppBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundImage: \"url('/timeline.png')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        minHeight: \"100vh\",\n        paddingTop: \"40px\",\n        paddingBottom: \"40px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        sx: {\n          backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n          borderRadius: 2,\n          padding: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"DCU News Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), timeline.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No timeline data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : timeline.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"30px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: entry.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            style: {\n              marginBottom: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), entry.posts.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: entry.posts.map((post, postIdx) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    children: post.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: post.subreddit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: post.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 25\n              }, this)\n            }, postIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: \"No posts for this date.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TimelinePage, \"C7vcNmHoIxQV5jO6U8CdK5OEsZU=\");\n_c = TimelinePage;\nvar _c;\n$RefreshReg$(_c, \"TimelinePage\");","map":{"version":3,"names":["React","useState","useEffect","api","SearchAppBar","Container","Typography","Card","CardContent","Grid","Divider","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","TimelinePage","_s","timeline","setTimeline","searchQuery","setSearchQuery","fetchTimeline","response","get","data","Array","isArray","message","map","item","posts","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","backgroundImage","backgroundSize","backgroundPosition","minHeight","paddingTop","paddingBottom","maxWidth","backgroundColor","borderRadius","padding","variant","gutterBottom","length","entry","idx","style","marginBottom","date","container","spacing","post","postIdx","xs","sm","md","title","color","subreddit","text","_c","$RefreshReg$"],"sources":["C:/Users/gorek/resume_projects/DCU_news_app/frontend/src/pages/TimelinePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport api from \"../auth/axios\";\r\nimport SearchAppBar from \"../componets/AppBar\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Divider,\r\n  Box,\r\n} from \"@mui/material\";\r\n\r\nexport default function TimelinePage() {\r\n  const [timeline, setTimeline] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchTimeline();\r\n  }, []);\r\n\r\n  async function fetchTimeline() {\r\n    try {\r\n      const response = await api.get(\"/reddit/timeline\");\r\n\r\n      // Ensure a safe structure\r\n      const data = Array.isArray(response.data.message)\r\n        ? response.data.message.map((item) => ({\r\n            ...item,\r\n            posts: Array.isArray(item.posts) ? item.posts : [],\r\n          }))\r\n        : [];\r\n\r\n      setTimeline(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch timeline:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SearchAppBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n\r\n      <Box\r\n        sx={{\r\n          backgroundImage: \"url('/timeline.png')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          minHeight: \"100vh\",\r\n          paddingTop: \"40px\",\r\n          paddingBottom: \"40px\",\r\n        }}\r\n      >\r\n        <Container\r\n          maxWidth=\"md\"\r\n          sx={{\r\n            backgroundColor: \"rgba(255, 255, 255, 0.9)\",\r\n            borderRadius: 2,\r\n            padding: 3,\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            DCU News Timeline\r\n          </Typography>\r\n\r\n          {timeline.length === 0 ? (\r\n            <Typography>No timeline data available.</Typography>\r\n          ) : (\r\n            timeline.map((entry, idx) => (\r\n              <div key={idx} style={{ marginBottom: \"30px\" }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  {entry.date}\r\n                </Typography>\r\n                <Divider style={{ marginBottom: \"10px\" }} />\r\n\r\n                {entry.posts.length > 0 ? (\r\n                  <Grid container spacing={2}>\r\n                    {entry.posts.map((post, postIdx) => (\r\n                      <Grid item xs={12} sm={6} md={4} key={postIdx}>\r\n                        <Card>\r\n                          <CardContent>\r\n                            <Typography variant=\"subtitle1\">{post.title}</Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {post.subreddit}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">{post.text}</Typography>\r\n                          </CardContent>\r\n                        </Card>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    No posts for this date.\r\n                  </Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          )}\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}