{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gorek\\\\resume_projects\\\\DCU_news_app\\\\frontend\\\\src\\\\pages\\\\ResetPasswordPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Typography, TextField, Button, Box, Snackbar, Alert } from \"@mui/material\";\nimport SearchAppBar from \"../components/AppBar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ResetPasswordPage() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\"\n  });\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const BASE_URL = \"http://localhost:8000/auth\";\n  async function handleReset() {\n    try {\n      const response = await axios.post(`${BASE_URL}/reset-password`, {\n        email,\n        current_password: currentPassword,\n        new_password: newPassword\n      });\n      setSnackbar({\n        open: true,\n        message: \"Password reset successful!\",\n        severity: \"success\"\n      });\n      setEmail(\"\");\n      setCurrentPassword(\"\");\n      setNewPassword(\"\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Password reset failed\", error);\n      setSnackbar({\n        open: true,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"Reset failed\",\n        severity: \"error\"\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchAppBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minHeight: \"100vh\",\n        backgroundImage: \"url('/reset_register.png')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        p: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xs\",\n        sx: {\n          backgroundColor: \"rgba(255,255,255,0.95)\",\n          padding: 4,\n          borderRadius: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          align: \"center\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Current Password\",\n          type: \"password\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: currentPassword,\n          onChange: e => setCurrentPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"New Password\",\n          type: \"password\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            onClick: handleReset,\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 3000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSnackbar({\n          ...snackbar,\n          open: false\n        }),\n        severity: snackbar.severity,\n        sx: {\n          width: \"100%\"\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ResetPasswordPage, \"0HGL9peDPi5RPMBMqaI9WAYu/8I=\");\n_c = ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","axios","Container","Typography","TextField","Button","Box","Snackbar","Alert","SearchAppBar","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPasswordPage","_s","email","setEmail","currentPassword","setCurrentPassword","newPassword","setNewPassword","snackbar","setSnackbar","open","message","severity","searchQuery","setSearchQuery","BASE_URL","handleReset","response","post","current_password","new_password","error","_error$response","_error$response$data","console","data","detail","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","minHeight","backgroundImage","backgroundSize","backgroundPosition","display","alignItems","justifyContent","p","maxWidth","backgroundColor","padding","borderRadius","variant","gutterBottom","align","label","fullWidth","margin","value","onChange","e","target","type","mt","color","onClick","autoHideDuration","onClose","width","_c","$RefreshReg$"],"sources":["C:/Users/gorek/resume_projects/DCU_news_app/frontend/src/pages/ResetPasswordPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Snackbar,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport SearchAppBar from \"../components/AppBar\";\r\n\r\nexport default function ResetPasswordPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: \"\", severity: \"success\" });\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const BASE_URL = \"http://localhost:8000/auth\";\r\n\r\n  async function handleReset() {\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/reset-password`, {\r\n        email,\r\n        current_password: currentPassword,\r\n        new_password: newPassword,\r\n      });\r\n      setSnackbar({ open: true, message: \"Password reset successful!\", severity: \"success\" });\r\n      setEmail(\"\");\r\n      setCurrentPassword(\"\");\r\n      setNewPassword(\"\");\r\n    } catch (error) {\r\n      console.error(\"Password reset failed\", error);\r\n      setSnackbar({\r\n        open: true,\r\n        message: error.response?.data?.detail || \"Reset failed\",\r\n        severity: \"error\"\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SearchAppBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n      <Box\r\n        sx={{\r\n          minHeight: \"100vh\",\r\n          backgroundImage: \"url('/reset_register.png')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          p: 4,\r\n        }}\r\n      >\r\n        <Container maxWidth=\"xs\" sx={{ backgroundColor: \"rgba(255,255,255,0.95)\", padding: 4, borderRadius: 2 }}>\r\n          <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n            Reset Password\r\n          </Typography>\r\n\r\n          <TextField\r\n            label=\"Email\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            label=\"Current Password\"\r\n            type=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={currentPassword}\r\n            onChange={(e) => setCurrentPassword(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            label=\"New Password\"\r\n            type=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n\r\n          <Box mt={2}>\r\n            <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleReset}>\r\n              Reset Password\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={3000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n          severity={snackbar.severity}\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}