{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gorek\\\\resume_projects\\\\DCU_news_app\\\\frontend\\\\src\\\\pages\\\\TimelinePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../auth/axios\";\nimport { Container, Typography, Card, CardContent, Grid, Divider } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TimelinePage() {\n  _s();\n  const [timeline, setTimeline] = useState([]);\n  useEffect(() => {\n    fetchTimeline();\n  }, []);\n  async function fetchTimeline() {\n    try {\n      const response = await api.get(\"/reddit/timeline\");\n      setTimeline(response.data.message);\n    } catch (error) {\n      console.error(\"Failed to fetch timeline:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    style: {\n      marginTop: \"40px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"DCU News Timeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), timeline.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No timeline data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : timeline.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: entry.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        style: {\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: entry.posts.map((post, postIdx) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: post.subreddit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: post.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this)\n        }, postIdx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(TimelinePage, \"z98/75R+huXEmKA0ZBeC6lWr83k=\");\n_c = TimelinePage;\nvar _c;\n$RefreshReg$(_c, \"TimelinePage\");","map":{"version":3,"names":["React","useState","useEffect","api","Container","Typography","Card","CardContent","Grid","Divider","jsxDEV","_jsxDEV","TimelinePage","_s","timeline","setTimeline","fetchTimeline","response","get","data","message","error","console","maxWidth","style","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","length","map","entry","idx","marginBottom","date","container","spacing","posts","post","postIdx","item","xs","sm","md","title","color","subreddit","text","_c","$RefreshReg$"],"sources":["C:/Users/gorek/resume_projects/DCU_news_app/frontend/src/pages/TimelinePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport api from \"../auth/axios\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Divider,\r\n} from \"@mui/material\";\r\n\r\nexport default function TimelinePage() {\r\n  const [timeline, setTimeline] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTimeline();\r\n  }, []);\r\n\r\n  async function fetchTimeline() {\r\n    try {\r\n      const response = await api.get(\"/reddit/timeline\");\r\n      setTimeline(response.data.message);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch timeline:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" style={{ marginTop: \"40px\" }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        DCU News Timeline\r\n      </Typography>\r\n\r\n      {timeline.length === 0 ? (\r\n        <Typography>No timeline data available.</Typography>\r\n      ) : (\r\n        timeline.map((entry, idx) => (\r\n          <div key={idx} style={{ marginBottom: \"30px\" }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              {entry.date}\r\n            </Typography>\r\n            <Divider style={{ marginBottom: \"10px\" }} />\r\n\r\n            <Grid container spacing={2}>\r\n              {entry.posts.map((post, postIdx) => (\r\n                <Grid item xs={12} sm={6} md={4} key={postIdx}>\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Typography variant=\"subtitle1\">{post.title}</Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {post.subreddit}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">{post.text}</Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        ))\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}